Terminals unused in grammar

   Trip_Quote
   T_OB
   T_CB
   T_Range
   T_List


Rules useless in parser due to conflicts

   42 $@3: %empty


State 2 conflicts: 1 shift/reduce
State 7 conflicts: 1 reduce/reduce
State 10 conflicts: 1 shift/reduce
State 12 conflicts: 1 shift/reduce
State 13 conflicts: 1 shift/reduce
State 17 conflicts: 1 shift/reduce
State 25 conflicts: 2 shift/reduce
State 41 conflicts: 2 shift/reduce, 3 reduce/reduce
State 49 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 66 conflicts: 2 shift/reduce
State 67 conflicts: 2 shift/reduce
State 71 conflicts: 3 shift/reduce
State 72 conflicts: 3 shift/reduce
State 73 conflicts: 1 shift/reduce
State 80 conflicts: 2 shift/reduce, 3 reduce/reduce
State 81 conflicts: 2 shift/reduce, 3 reduce/reduce
State 88 conflicts: 2 shift/reduce
State 91 conflicts: 3 shift/reduce
State 94 conflicts: 2 shift/reduce
State 95 conflicts: 1 shift/reduce
State 104 conflicts: 2 shift/reduce
State 110 conflicts: 2 shift/reduce
State 113 conflicts: 2 shift/reduce
State 114 conflicts: 2 shift/reduce
State 115 conflicts: 2 shift/reduce
State 117 conflicts: 2 shift/reduce


Grammar

    0 $accept: StartDebugger $end

    1 $@1: %empty

    2 StartDebugger: $@1 StartParse T_EndOfFile

    3 constant: T_Number
    4         | T_String

    5 term: T_ID
    6     | %empty
    7     | constant

    8 StartParse: finalStatements

    9 Expressions: arith_exp
   10            | bool_exp

   11 basic_stmt: pass_stmt
   12           | break_stmt
   13           | import_stmt
   14           | assign_stmt
   15           | Expressions
   16           | print_stmt

   17 arith_exp: term
   18          | arith_exp T_PL arith_exp
   19          | arith_exp T_MN arith_exp
   20          | arith_exp T_ML arith_exp
   21          | arith_exp T_DV arith_exp
   22          | T_OP arith_exp T_CP

   23 ROP: T_GT
   24    | LT
   25    | T_ELT
   26    | T_EGT

   27 bool_exp: T_True
   28         | T_False
   29         | T_OP bool_exp T_CP
   30         | arith_exp ROP arith_exp
   31         | bool_exp T_And bool_exp
   32         | bool_exp T_Or bool_exp
   33         | T_Not bool_exp
   34         | Expressions T_EQ Expressions
   35         | Expressions T_Not T_EQL Expressions
   36         | Expressions T_NEQ Expressions

   37 import_stmt: T_Import T_ID

   38 pass_stmt: T_Pass

   39 break_stmt: T_Break

   40 $@2: %empty

   41 assign_stmt: T_ID $@2 T_EQL Expressions

   42 $@3: %empty

   43 assign_stmt: T_ID $@3 T_EQL func_call

   44 print_stmt: T_Print T_OP T_String T_CP

   45 finalStatements: basic_stmt
   46                | cmpd_stmt
   47                | func_def
   48                | T_NL

   49 cmpd_stmt: if_stmt
   50          | while_stmt

   51 if_stmt: T_If bool_exp T_Cln start_suite elif_stmts

   52 elif_stmts: %empty
   53           | T_Elif bool_exp T_Cln start_suite elif_stmts
   54           | else_stmts

   55 else_stmts: T_Else T_Cln start_suite

   56 while_stmt: T_While bool_exp T_Cln start_suite

   57 start_suite: basic_stmt
   58            | T_NL ID finalStatements suite

   59 suite: T_NL ND finalStatements suite
   60      | T_NL end_suite

   61 end_suite: DD finalStatements
   62          | %empty

   63 args_list: T_ID T_Comma args_list
   64          | T_ID
   65          | %empty

   66 $@4: %empty

   67 func_def: T_Def T_ID $@4 T_OP args_list T_CP T_Cln start_suite

   68 func_call: T_ID T_OP args_list T_CP


Terminals, with rules where they appear

$end (0) 0
error (256)
T_EndOfFile (258) 2
T_Number (259) 3
T_True (260) 27
T_False (261) 28
T_ID (262) 5 37 41 43 63 64 67 68
T_Print (263) 44
T_Cln (264) 51 53 55 56 67
T_NL (265) 48 58 59 60
T_EQL (266) 35 41 43
T_NEQ (267) 36
T_EQ (268) 34
T_GT (269) 23
LT (270) 24
T_EGT (271) 26
T_ELT (272) 25
T_Or (273) 32
T_And (274) 31
T_Not (275) 33 35
ID (276) 58
ND (277) 59
DD (278) 61
T_String (279) 4 44
Trip_Quote (280)
T_If (281) 51
T_Elif (282) 53
T_While (283) 56
T_Else (284) 55
T_Import (285) 37
T_Break (286) 39
T_Pass (287) 38
T_MN (288) 19
T_PL (289) 18
T_DV (290) 21
T_ML (291) 20
T_OP (292) 22 29 44 67 68
T_CP (293) 22 29 44 67 68
T_OB (294)
T_CB (295)
T_Def (296) 67
T_Comma (297) 63
T_Range (298)
T_List (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
StartDebugger (46)
    on left: 2, on right: 0
$@1 (47)
    on left: 1, on right: 2
constant (48)
    on left: 3 4, on right: 7
term (49)
    on left: 5 6 7, on right: 17
StartParse (50)
    on left: 8, on right: 2
Expressions (51)
    on left: 9 10, on right: 15 34 35 36 41
basic_stmt (52)
    on left: 11 12 13 14 15 16, on right: 45 57
arith_exp (53)
    on left: 17 18 19 20 21 22, on right: 9 18 19 20 21 22 30
ROP (54)
    on left: 23 24 25 26, on right: 30
bool_exp (55)
    on left: 27 28 29 30 31 32 33 34 35 36, on right: 10 29 31 32 33
    51 53 56
import_stmt (56)
    on left: 37, on right: 13
pass_stmt (57)
    on left: 38, on right: 11
break_stmt (58)
    on left: 39, on right: 12
assign_stmt (59)
    on left: 41 43, on right: 14
$@2 (60)
    on left: 40, on right: 41
$@3 (61)
    on left: 42, on right: 43
print_stmt (62)
    on left: 44, on right: 16
finalStatements (63)
    on left: 45 46 47 48, on right: 8 58 59 61
cmpd_stmt (64)
    on left: 49 50, on right: 46
if_stmt (65)
    on left: 51, on right: 49
elif_stmts (66)
    on left: 52 53 54, on right: 51 53
else_stmts (67)
    on left: 55, on right: 54
while_stmt (68)
    on left: 56, on right: 50
start_suite (69)
    on left: 57 58, on right: 51 53 55 56 67
suite (70)
    on left: 59 60, on right: 58 59
end_suite (71)
    on left: 61 62, on right: 60
args_list (72)
    on left: 63 64 65, on right: 63 67 68
func_def (73)
    on left: 67, on right: 47
$@4 (74)
    on left: 66, on right: 67
func_call (75)
    on left: 68, on right: 43


State 0

    0 $accept: . StartDebugger $end

    $default  reduce using rule 1 ($@1)

    StartDebugger  go to state 1
    $@1            go to state 2


State 1

    0 $accept: StartDebugger . $end

    $end  shift, and go to state 3


State 2

    2 StartDebugger: $@1 . StartParse T_EndOfFile

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 7
    T_Print   shift, and go to state 8
    T_NL      shift, and go to state 9
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_If      shift, and go to state 12
    T_While   shift, and go to state 13
    T_Import  shift, and go to state 14
    T_Break   shift, and go to state 15
    T_Pass    shift, and go to state 16
    T_OP      shift, and go to state 17
    T_Def     shift, and go to state 18

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant         go to state 19
    term             go to state 20
    StartParse       go to state 21
    Expressions      go to state 22
    basic_stmt       go to state 23
    arith_exp        go to state 24
    bool_exp         go to state 25
    import_stmt      go to state 26
    pass_stmt        go to state 27
    break_stmt       go to state 28
    assign_stmt      go to state 29
    print_stmt       go to state 30
    finalStatements  go to state 31
    cmpd_stmt        go to state 32
    if_stmt          go to state 33
    while_stmt       go to state 34
    func_def         go to state 35


State 3

    0 $accept: StartDebugger $end .

    $default  accept


State 4

    3 constant: T_Number .

    $default  reduce using rule 3 (constant)


State 5

   27 bool_exp: T_True .

    $default  reduce using rule 27 (bool_exp)


State 6

   28 bool_exp: T_False .

    $default  reduce using rule 28 (bool_exp)


State 7

    5 term: T_ID .
   41 assign_stmt: T_ID . $@2 T_EQL Expressions
   43            | T_ID . $@3 T_EQL func_call

    T_EQL     reduce using rule 40 ($@2)
    T_EQL     [reduce using rule 42 ($@3)]
    $default  reduce using rule 5 (term)

    $@2  go to state 36
    $@3  go to state 37


State 8

   44 print_stmt: T_Print . T_OP T_String T_CP

    T_OP  shift, and go to state 38


State 9

   48 finalStatements: T_NL .

    $default  reduce using rule 48 (finalStatements)


State 10

   33 bool_exp: T_Not . bool_exp

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 40
    arith_exp    go to state 24
    bool_exp     go to state 41


State 11

    4 constant: T_String .

    $default  reduce using rule 4 (constant)


State 12

   51 if_stmt: T_If . bool_exp T_Cln start_suite elif_stmts

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 40
    arith_exp    go to state 24
    bool_exp     go to state 42


State 13

   56 while_stmt: T_While . bool_exp T_Cln start_suite

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 40
    arith_exp    go to state 24
    bool_exp     go to state 43


State 14

   37 import_stmt: T_Import . T_ID

    T_ID  shift, and go to state 44


State 15

   39 break_stmt: T_Break .

    $default  reduce using rule 39 (break_stmt)


State 16

   38 pass_stmt: T_Pass .

    $default  reduce using rule 38 (pass_stmt)


State 17

   22 arith_exp: T_OP . arith_exp T_CP
   29 bool_exp: T_OP . bool_exp T_CP

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 40
    arith_exp    go to state 45
    bool_exp     go to state 46


State 18

   67 func_def: T_Def . T_ID $@4 T_OP args_list T_CP T_Cln start_suite

    T_ID  shift, and go to state 47


State 19

    7 term: constant .

    $default  reduce using rule 7 (term)


State 20

   17 arith_exp: term .

    $default  reduce using rule 17 (arith_exp)


State 21

    2 StartDebugger: $@1 StartParse . T_EndOfFile

    T_EndOfFile  shift, and go to state 48


State 22

   15 basic_stmt: Expressions .
   34 bool_exp: Expressions . T_EQ Expressions
   35         | Expressions . T_Not T_EQL Expressions
   36         | Expressions . T_NEQ Expressions

    T_NEQ  shift, and go to state 49
    T_EQ   shift, and go to state 50
    T_Not  shift, and go to state 51

    $default  reduce using rule 15 (basic_stmt)


State 23

   45 finalStatements: basic_stmt .

    $default  reduce using rule 45 (finalStatements)


State 24

    9 Expressions: arith_exp .
   18 arith_exp: arith_exp . T_PL arith_exp
   19          | arith_exp . T_MN arith_exp
   20          | arith_exp . T_ML arith_exp
   21          | arith_exp . T_DV arith_exp
   30 bool_exp: arith_exp . ROP arith_exp

    T_GT   shift, and go to state 52
    LT     shift, and go to state 53
    T_EGT  shift, and go to state 54
    T_ELT  shift, and go to state 55
    T_MN   shift, and go to state 56
    T_PL   shift, and go to state 57
    T_DV   shift, and go to state 58
    T_ML   shift, and go to state 59

    $default  reduce using rule 9 (Expressions)

    ROP  go to state 60


State 25

   10 Expressions: bool_exp .
   31 bool_exp: bool_exp . T_And bool_exp
   32         | bool_exp . T_Or bool_exp

    T_Or   shift, and go to state 61
    T_And  shift, and go to state 62

    T_Or      [reduce using rule 10 (Expressions)]
    T_And     [reduce using rule 10 (Expressions)]
    $default  reduce using rule 10 (Expressions)


State 26

   13 basic_stmt: import_stmt .

    $default  reduce using rule 13 (basic_stmt)


State 27

   11 basic_stmt: pass_stmt .

    $default  reduce using rule 11 (basic_stmt)


State 28

   12 basic_stmt: break_stmt .

    $default  reduce using rule 12 (basic_stmt)


State 29

   14 basic_stmt: assign_stmt .

    $default  reduce using rule 14 (basic_stmt)


State 30

   16 basic_stmt: print_stmt .

    $default  reduce using rule 16 (basic_stmt)


State 31

    8 StartParse: finalStatements .

    $default  reduce using rule 8 (StartParse)


State 32

   46 finalStatements: cmpd_stmt .

    $default  reduce using rule 46 (finalStatements)


State 33

   49 cmpd_stmt: if_stmt .

    $default  reduce using rule 49 (cmpd_stmt)


State 34

   50 cmpd_stmt: while_stmt .

    $default  reduce using rule 50 (cmpd_stmt)


State 35

   47 finalStatements: func_def .

    $default  reduce using rule 47 (finalStatements)


State 36

   41 assign_stmt: T_ID $@2 . T_EQL Expressions

    T_EQL  shift, and go to state 63


State 37

   43 assign_stmt: T_ID $@3 . T_EQL func_call

    T_EQL  shift, and go to state 64


State 38

   44 print_stmt: T_Print T_OP . T_String T_CP

    T_String  shift, and go to state 65


State 39

    5 term: T_ID .

    $default  reduce using rule 5 (term)


State 40

   34 bool_exp: Expressions . T_EQ Expressions
   35         | Expressions . T_Not T_EQL Expressions
   36         | Expressions . T_NEQ Expressions

    T_NEQ  shift, and go to state 49
    T_EQ   shift, and go to state 50
    T_Not  shift, and go to state 51


State 41

   10 Expressions: bool_exp .
   31 bool_exp: bool_exp . T_And bool_exp
   32         | bool_exp . T_Or bool_exp
   33         | T_Not bool_exp .

    T_Or   shift, and go to state 61
    T_And  shift, and go to state 62

    T_NEQ     reduce using rule 10 (Expressions)
    T_NEQ     [reduce using rule 33 (bool_exp)]
    T_EQ      reduce using rule 10 (Expressions)
    T_EQ      [reduce using rule 33 (bool_exp)]
    T_Or      [reduce using rule 33 (bool_exp)]
    T_And     [reduce using rule 33 (bool_exp)]
    T_Not     reduce using rule 10 (Expressions)
    T_Not     [reduce using rule 33 (bool_exp)]
    $default  reduce using rule 33 (bool_exp)


State 42

   10 Expressions: bool_exp .
   31 bool_exp: bool_exp . T_And bool_exp
   32         | bool_exp . T_Or bool_exp
   51 if_stmt: T_If bool_exp . T_Cln start_suite elif_stmts

    T_Cln  shift, and go to state 66
    T_Or   shift, and go to state 61
    T_And  shift, and go to state 62

    $default  reduce using rule 10 (Expressions)


State 43

   10 Expressions: bool_exp .
   31 bool_exp: bool_exp . T_And bool_exp
   32         | bool_exp . T_Or bool_exp
   56 while_stmt: T_While bool_exp . T_Cln start_suite

    T_Cln  shift, and go to state 67
    T_Or   shift, and go to state 61
    T_And  shift, and go to state 62

    $default  reduce using rule 10 (Expressions)


State 44

   37 import_stmt: T_Import T_ID .

    $default  reduce using rule 37 (import_stmt)


State 45

    9 Expressions: arith_exp .
   18 arith_exp: arith_exp . T_PL arith_exp
   19          | arith_exp . T_MN arith_exp
   20          | arith_exp . T_ML arith_exp
   21          | arith_exp . T_DV arith_exp
   22          | T_OP arith_exp . T_CP
   30 bool_exp: arith_exp . ROP arith_exp

    T_GT   shift, and go to state 52
    LT     shift, and go to state 53
    T_EGT  shift, and go to state 54
    T_ELT  shift, and go to state 55
    T_MN   shift, and go to state 56
    T_PL   shift, and go to state 57
    T_DV   shift, and go to state 58
    T_ML   shift, and go to state 59
    T_CP   shift, and go to state 68

    $default  reduce using rule 9 (Expressions)

    ROP  go to state 60


State 46

   10 Expressions: bool_exp .
   29 bool_exp: T_OP bool_exp . T_CP
   31         | bool_exp . T_And bool_exp
   32         | bool_exp . T_Or bool_exp

    T_Or   shift, and go to state 61
    T_And  shift, and go to state 62
    T_CP   shift, and go to state 69

    $default  reduce using rule 10 (Expressions)


State 47

   67 func_def: T_Def T_ID . $@4 T_OP args_list T_CP T_Cln start_suite

    $default  reduce using rule 66 ($@4)

    $@4  go to state 70


State 48

    2 StartDebugger: $@1 StartParse T_EndOfFile .

    $default  reduce using rule 2 (StartDebugger)


State 49

   36 bool_exp: Expressions T_NEQ . Expressions

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 71
    arith_exp    go to state 24
    bool_exp     go to state 25


State 50

   34 bool_exp: Expressions T_EQ . Expressions

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 72
    arith_exp    go to state 24
    bool_exp     go to state 25


State 51

   35 bool_exp: Expressions T_Not . T_EQL Expressions

    T_EQL  shift, and go to state 73


State 52

   23 ROP: T_GT .

    $default  reduce using rule 23 (ROP)


State 53

   24 ROP: LT .

    $default  reduce using rule 24 (ROP)


State 54

   26 ROP: T_EGT .

    $default  reduce using rule 26 (ROP)


State 55

   25 ROP: T_ELT .

    $default  reduce using rule 25 (ROP)


State 56

   19 arith_exp: arith_exp T_MN . arith_exp

    T_Number  shift, and go to state 4
    T_ID      shift, and go to state 39
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 74

    $default  reduce using rule 6 (term)

    constant   go to state 19
    term       go to state 20
    arith_exp  go to state 75


State 57

   18 arith_exp: arith_exp T_PL . arith_exp

    T_Number  shift, and go to state 4
    T_ID      shift, and go to state 39
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 74

    $default  reduce using rule 6 (term)

    constant   go to state 19
    term       go to state 20
    arith_exp  go to state 76


State 58

   21 arith_exp: arith_exp T_DV . arith_exp

    T_Number  shift, and go to state 4
    T_ID      shift, and go to state 39
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 74

    $default  reduce using rule 6 (term)

    constant   go to state 19
    term       go to state 20
    arith_exp  go to state 77


State 59

   20 arith_exp: arith_exp T_ML . arith_exp

    T_Number  shift, and go to state 4
    T_ID      shift, and go to state 39
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 74

    $default  reduce using rule 6 (term)

    constant   go to state 19
    term       go to state 20
    arith_exp  go to state 78


State 60

   30 bool_exp: arith_exp ROP . arith_exp

    T_Number  shift, and go to state 4
    T_ID      shift, and go to state 39
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 74

    $default  reduce using rule 6 (term)

    constant   go to state 19
    term       go to state 20
    arith_exp  go to state 79


State 61

   32 bool_exp: bool_exp T_Or . bool_exp

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 40
    arith_exp    go to state 24
    bool_exp     go to state 80


State 62

   31 bool_exp: bool_exp T_And . bool_exp

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 40
    arith_exp    go to state 24
    bool_exp     go to state 81


State 63

   41 assign_stmt: T_ID $@2 T_EQL . Expressions

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 82
    arith_exp    go to state 24
    bool_exp     go to state 25


State 64

   43 assign_stmt: T_ID $@3 T_EQL . func_call

    T_ID  shift, and go to state 83

    func_call  go to state 84


State 65

   44 print_stmt: T_Print T_OP T_String . T_CP

    T_CP  shift, and go to state 85


State 66

   51 if_stmt: T_If bool_exp T_Cln . start_suite elif_stmts

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 7
    T_Print   shift, and go to state 8
    T_NL      shift, and go to state 86
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_Import  shift, and go to state 14
    T_Break   shift, and go to state 15
    T_Pass    shift, and go to state 16
    T_OP      shift, and go to state 17

    T_NL      [reduce using rule 6 (term)]
    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 22
    basic_stmt   go to state 87
    arith_exp    go to state 24
    bool_exp     go to state 25
    import_stmt  go to state 26
    pass_stmt    go to state 27
    break_stmt   go to state 28
    assign_stmt  go to state 29
    print_stmt   go to state 30
    start_suite  go to state 88


State 67

   56 while_stmt: T_While bool_exp T_Cln . start_suite

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 7
    T_Print   shift, and go to state 8
    T_NL      shift, and go to state 86
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_Import  shift, and go to state 14
    T_Break   shift, and go to state 15
    T_Pass    shift, and go to state 16
    T_OP      shift, and go to state 17

    T_NL      [reduce using rule 6 (term)]
    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 22
    basic_stmt   go to state 87
    arith_exp    go to state 24
    bool_exp     go to state 25
    import_stmt  go to state 26
    pass_stmt    go to state 27
    break_stmt   go to state 28
    assign_stmt  go to state 29
    print_stmt   go to state 30
    start_suite  go to state 89


State 68

   22 arith_exp: T_OP arith_exp T_CP .

    $default  reduce using rule 22 (arith_exp)


State 69

   29 bool_exp: T_OP bool_exp T_CP .

    $default  reduce using rule 29 (bool_exp)


State 70

   67 func_def: T_Def T_ID $@4 . T_OP args_list T_CP T_Cln start_suite

    T_OP  shift, and go to state 90


State 71

   34 bool_exp: Expressions . T_EQ Expressions
   35         | Expressions . T_Not T_EQL Expressions
   36         | Expressions . T_NEQ Expressions
   36         | Expressions T_NEQ Expressions .

    T_NEQ  shift, and go to state 49
    T_EQ   shift, and go to state 50
    T_Not  shift, and go to state 51

    T_NEQ     [reduce using rule 36 (bool_exp)]
    T_EQ      [reduce using rule 36 (bool_exp)]
    T_Not     [reduce using rule 36 (bool_exp)]
    $default  reduce using rule 36 (bool_exp)


State 72

   34 bool_exp: Expressions . T_EQ Expressions
   34         | Expressions T_EQ Expressions .
   35         | Expressions . T_Not T_EQL Expressions
   36         | Expressions . T_NEQ Expressions

    T_NEQ  shift, and go to state 49
    T_EQ   shift, and go to state 50
    T_Not  shift, and go to state 51

    T_NEQ     [reduce using rule 34 (bool_exp)]
    T_EQ      [reduce using rule 34 (bool_exp)]
    T_Not     [reduce using rule 34 (bool_exp)]
    $default  reduce using rule 34 (bool_exp)


State 73

   35 bool_exp: Expressions T_Not T_EQL . Expressions

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 91
    arith_exp    go to state 24
    bool_exp     go to state 25


State 74

   22 arith_exp: T_OP . arith_exp T_CP

    T_Number  shift, and go to state 4
    T_ID      shift, and go to state 39
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 74

    $default  reduce using rule 6 (term)

    constant   go to state 19
    term       go to state 20
    arith_exp  go to state 92


State 75

   18 arith_exp: arith_exp . T_PL arith_exp
   19          | arith_exp . T_MN arith_exp
   19          | arith_exp T_MN arith_exp .
   20          | arith_exp . T_ML arith_exp
   21          | arith_exp . T_DV arith_exp

    T_DV  shift, and go to state 58
    T_ML  shift, and go to state 59

    $default  reduce using rule 19 (arith_exp)


State 76

   18 arith_exp: arith_exp . T_PL arith_exp
   18          | arith_exp T_PL arith_exp .
   19          | arith_exp . T_MN arith_exp
   20          | arith_exp . T_ML arith_exp
   21          | arith_exp . T_DV arith_exp

    T_DV  shift, and go to state 58
    T_ML  shift, and go to state 59

    $default  reduce using rule 18 (arith_exp)


State 77

   18 arith_exp: arith_exp . T_PL arith_exp
   19          | arith_exp . T_MN arith_exp
   20          | arith_exp . T_ML arith_exp
   21          | arith_exp . T_DV arith_exp
   21          | arith_exp T_DV arith_exp .

    $default  reduce using rule 21 (arith_exp)


State 78

   18 arith_exp: arith_exp . T_PL arith_exp
   19          | arith_exp . T_MN arith_exp
   20          | arith_exp . T_ML arith_exp
   20          | arith_exp T_ML arith_exp .
   21          | arith_exp . T_DV arith_exp

    $default  reduce using rule 20 (arith_exp)


State 79

   18 arith_exp: arith_exp . T_PL arith_exp
   19          | arith_exp . T_MN arith_exp
   20          | arith_exp . T_ML arith_exp
   21          | arith_exp . T_DV arith_exp
   30 bool_exp: arith_exp ROP arith_exp .

    T_MN  shift, and go to state 56
    T_PL  shift, and go to state 57
    T_DV  shift, and go to state 58
    T_ML  shift, and go to state 59

    $default  reduce using rule 30 (bool_exp)


State 80

   10 Expressions: bool_exp .
   31 bool_exp: bool_exp . T_And bool_exp
   32         | bool_exp . T_Or bool_exp
   32         | bool_exp T_Or bool_exp .

    T_Or   shift, and go to state 61
    T_And  shift, and go to state 62

    T_NEQ     reduce using rule 10 (Expressions)
    T_NEQ     [reduce using rule 32 (bool_exp)]
    T_EQ      reduce using rule 10 (Expressions)
    T_EQ      [reduce using rule 32 (bool_exp)]
    T_Or      [reduce using rule 32 (bool_exp)]
    T_And     [reduce using rule 32 (bool_exp)]
    T_Not     reduce using rule 10 (Expressions)
    T_Not     [reduce using rule 32 (bool_exp)]
    $default  reduce using rule 32 (bool_exp)


State 81

   10 Expressions: bool_exp .
   31 bool_exp: bool_exp . T_And bool_exp
   31         | bool_exp T_And bool_exp .
   32         | bool_exp . T_Or bool_exp

    T_Or   shift, and go to state 61
    T_And  shift, and go to state 62

    T_NEQ     reduce using rule 10 (Expressions)
    T_NEQ     [reduce using rule 31 (bool_exp)]
    T_EQ      reduce using rule 10 (Expressions)
    T_EQ      [reduce using rule 31 (bool_exp)]
    T_Or      [reduce using rule 31 (bool_exp)]
    T_And     [reduce using rule 31 (bool_exp)]
    T_Not     reduce using rule 10 (Expressions)
    T_Not     [reduce using rule 31 (bool_exp)]
    $default  reduce using rule 31 (bool_exp)


State 82

   34 bool_exp: Expressions . T_EQ Expressions
   35         | Expressions . T_Not T_EQL Expressions
   36         | Expressions . T_NEQ Expressions
   41 assign_stmt: T_ID $@2 T_EQL Expressions .

    T_NEQ  shift, and go to state 49
    T_EQ   shift, and go to state 50
    T_Not  shift, and go to state 51

    $default  reduce using rule 41 (assign_stmt)


State 83

   68 func_call: T_ID . T_OP args_list T_CP

    T_OP  shift, and go to state 93


State 84

   43 assign_stmt: T_ID $@3 T_EQL func_call .

    $default  reduce using rule 43 (assign_stmt)


State 85

   44 print_stmt: T_Print T_OP T_String T_CP .

    $default  reduce using rule 44 (print_stmt)


State 86

   58 start_suite: T_NL . ID finalStatements suite

    ID  shift, and go to state 94


State 87

   57 start_suite: basic_stmt .

    $default  reduce using rule 57 (start_suite)


State 88

   51 if_stmt: T_If bool_exp T_Cln start_suite . elif_stmts

    T_Elif  shift, and go to state 95
    T_Else  shift, and go to state 96

    T_Elif    [reduce using rule 52 (elif_stmts)]
    T_Else    [reduce using rule 52 (elif_stmts)]
    $default  reduce using rule 52 (elif_stmts)

    elif_stmts  go to state 97
    else_stmts  go to state 98


State 89

   56 while_stmt: T_While bool_exp T_Cln start_suite .

    $default  reduce using rule 56 (while_stmt)


State 90

   67 func_def: T_Def T_ID $@4 T_OP . args_list T_CP T_Cln start_suite

    T_ID  shift, and go to state 99

    $default  reduce using rule 65 (args_list)

    args_list  go to state 100


State 91

   34 bool_exp: Expressions . T_EQ Expressions
   35         | Expressions . T_Not T_EQL Expressions
   35         | Expressions T_Not T_EQL Expressions .
   36         | Expressions . T_NEQ Expressions

    T_NEQ  shift, and go to state 49
    T_EQ   shift, and go to state 50
    T_Not  shift, and go to state 51

    T_NEQ     [reduce using rule 35 (bool_exp)]
    T_EQ      [reduce using rule 35 (bool_exp)]
    T_Not     [reduce using rule 35 (bool_exp)]
    $default  reduce using rule 35 (bool_exp)


State 92

   18 arith_exp: arith_exp . T_PL arith_exp
   19          | arith_exp . T_MN arith_exp
   20          | arith_exp . T_ML arith_exp
   21          | arith_exp . T_DV arith_exp
   22          | T_OP arith_exp . T_CP

    T_MN  shift, and go to state 56
    T_PL  shift, and go to state 57
    T_DV  shift, and go to state 58
    T_ML  shift, and go to state 59
    T_CP  shift, and go to state 68


State 93

   68 func_call: T_ID T_OP . args_list T_CP

    T_ID  shift, and go to state 99

    $default  reduce using rule 65 (args_list)

    args_list  go to state 101


State 94

   58 start_suite: T_NL ID . finalStatements suite

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 7
    T_Print   shift, and go to state 8
    T_NL      shift, and go to state 9
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_If      shift, and go to state 12
    T_While   shift, and go to state 13
    T_Import  shift, and go to state 14
    T_Break   shift, and go to state 15
    T_Pass    shift, and go to state 16
    T_OP      shift, and go to state 17
    T_Def     shift, and go to state 18

    T_NL      [reduce using rule 6 (term)]
    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant         go to state 19
    term             go to state 20
    Expressions      go to state 22
    basic_stmt       go to state 23
    arith_exp        go to state 24
    bool_exp         go to state 25
    import_stmt      go to state 26
    pass_stmt        go to state 27
    break_stmt       go to state 28
    assign_stmt      go to state 29
    print_stmt       go to state 30
    finalStatements  go to state 102
    cmpd_stmt        go to state 32
    if_stmt          go to state 33
    while_stmt       go to state 34
    func_def         go to state 35


State 95

   53 elif_stmts: T_Elif . bool_exp T_Cln start_suite elif_stmts

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 39
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_OP      shift, and go to state 17

    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 40
    arith_exp    go to state 24
    bool_exp     go to state 103


State 96

   55 else_stmts: T_Else . T_Cln start_suite

    T_Cln  shift, and go to state 104


State 97

   51 if_stmt: T_If bool_exp T_Cln start_suite elif_stmts .

    $default  reduce using rule 51 (if_stmt)


State 98

   54 elif_stmts: else_stmts .

    $default  reduce using rule 54 (elif_stmts)


State 99

   63 args_list: T_ID . T_Comma args_list
   64          | T_ID .

    T_Comma  shift, and go to state 105

    $default  reduce using rule 64 (args_list)


State 100

   67 func_def: T_Def T_ID $@4 T_OP args_list . T_CP T_Cln start_suite

    T_CP  shift, and go to state 106


State 101

   68 func_call: T_ID T_OP args_list . T_CP

    T_CP  shift, and go to state 107


State 102

   58 start_suite: T_NL ID finalStatements . suite

    T_NL  shift, and go to state 108

    suite  go to state 109


State 103

   10 Expressions: bool_exp .
   31 bool_exp: bool_exp . T_And bool_exp
   32         | bool_exp . T_Or bool_exp
   53 elif_stmts: T_Elif bool_exp . T_Cln start_suite elif_stmts

    T_Cln  shift, and go to state 110
    T_Or   shift, and go to state 61
    T_And  shift, and go to state 62

    $default  reduce using rule 10 (Expressions)


State 104

   55 else_stmts: T_Else T_Cln . start_suite

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 7
    T_Print   shift, and go to state 8
    T_NL      shift, and go to state 86
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_Import  shift, and go to state 14
    T_Break   shift, and go to state 15
    T_Pass    shift, and go to state 16
    T_OP      shift, and go to state 17

    T_NL      [reduce using rule 6 (term)]
    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 22
    basic_stmt   go to state 87
    arith_exp    go to state 24
    bool_exp     go to state 25
    import_stmt  go to state 26
    pass_stmt    go to state 27
    break_stmt   go to state 28
    assign_stmt  go to state 29
    print_stmt   go to state 30
    start_suite  go to state 111


State 105

   63 args_list: T_ID T_Comma . args_list

    T_ID  shift, and go to state 99

    $default  reduce using rule 65 (args_list)

    args_list  go to state 112


State 106

   67 func_def: T_Def T_ID $@4 T_OP args_list T_CP . T_Cln start_suite

    T_Cln  shift, and go to state 113


State 107

   68 func_call: T_ID T_OP args_list T_CP .

    $default  reduce using rule 68 (func_call)


State 108

   59 suite: T_NL . ND finalStatements suite
   60      | T_NL . end_suite

    ND  shift, and go to state 114
    DD  shift, and go to state 115

    $default  reduce using rule 62 (end_suite)

    end_suite  go to state 116


State 109

   58 start_suite: T_NL ID finalStatements suite .

    $default  reduce using rule 58 (start_suite)


State 110

   53 elif_stmts: T_Elif bool_exp T_Cln . start_suite elif_stmts

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 7
    T_Print   shift, and go to state 8
    T_NL      shift, and go to state 86
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_Import  shift, and go to state 14
    T_Break   shift, and go to state 15
    T_Pass    shift, and go to state 16
    T_OP      shift, and go to state 17

    T_NL      [reduce using rule 6 (term)]
    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 22
    basic_stmt   go to state 87
    arith_exp    go to state 24
    bool_exp     go to state 25
    import_stmt  go to state 26
    pass_stmt    go to state 27
    break_stmt   go to state 28
    assign_stmt  go to state 29
    print_stmt   go to state 30
    start_suite  go to state 117


State 111

   55 else_stmts: T_Else T_Cln start_suite .

    $default  reduce using rule 55 (else_stmts)


State 112

   63 args_list: T_ID T_Comma args_list .

    $default  reduce using rule 63 (args_list)


State 113

   67 func_def: T_Def T_ID $@4 T_OP args_list T_CP T_Cln . start_suite

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 7
    T_Print   shift, and go to state 8
    T_NL      shift, and go to state 86
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_Import  shift, and go to state 14
    T_Break   shift, and go to state 15
    T_Pass    shift, and go to state 16
    T_OP      shift, and go to state 17

    T_NL      [reduce using rule 6 (term)]
    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant     go to state 19
    term         go to state 20
    Expressions  go to state 22
    basic_stmt   go to state 87
    arith_exp    go to state 24
    bool_exp     go to state 25
    import_stmt  go to state 26
    pass_stmt    go to state 27
    break_stmt   go to state 28
    assign_stmt  go to state 29
    print_stmt   go to state 30
    start_suite  go to state 118


State 114

   59 suite: T_NL ND . finalStatements suite

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 7
    T_Print   shift, and go to state 8
    T_NL      shift, and go to state 9
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_If      shift, and go to state 12
    T_While   shift, and go to state 13
    T_Import  shift, and go to state 14
    T_Break   shift, and go to state 15
    T_Pass    shift, and go to state 16
    T_OP      shift, and go to state 17
    T_Def     shift, and go to state 18

    T_NL      [reduce using rule 6 (term)]
    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant         go to state 19
    term             go to state 20
    Expressions      go to state 22
    basic_stmt       go to state 23
    arith_exp        go to state 24
    bool_exp         go to state 25
    import_stmt      go to state 26
    pass_stmt        go to state 27
    break_stmt       go to state 28
    assign_stmt      go to state 29
    print_stmt       go to state 30
    finalStatements  go to state 119
    cmpd_stmt        go to state 32
    if_stmt          go to state 33
    while_stmt       go to state 34
    func_def         go to state 35


State 115

   61 end_suite: DD . finalStatements

    T_Number  shift, and go to state 4
    T_True    shift, and go to state 5
    T_False   shift, and go to state 6
    T_ID      shift, and go to state 7
    T_Print   shift, and go to state 8
    T_NL      shift, and go to state 9
    T_Not     shift, and go to state 10
    T_String  shift, and go to state 11
    T_If      shift, and go to state 12
    T_While   shift, and go to state 13
    T_Import  shift, and go to state 14
    T_Break   shift, and go to state 15
    T_Pass    shift, and go to state 16
    T_OP      shift, and go to state 17
    T_Def     shift, and go to state 18

    T_NL      [reduce using rule 6 (term)]
    T_Not     [reduce using rule 6 (term)]
    $default  reduce using rule 6 (term)

    constant         go to state 19
    term             go to state 20
    Expressions      go to state 22
    basic_stmt       go to state 23
    arith_exp        go to state 24
    bool_exp         go to state 25
    import_stmt      go to state 26
    pass_stmt        go to state 27
    break_stmt       go to state 28
    assign_stmt      go to state 29
    print_stmt       go to state 30
    finalStatements  go to state 120
    cmpd_stmt        go to state 32
    if_stmt          go to state 33
    while_stmt       go to state 34
    func_def         go to state 35


State 116

   60 suite: T_NL end_suite .

    $default  reduce using rule 60 (suite)


State 117

   53 elif_stmts: T_Elif bool_exp T_Cln start_suite . elif_stmts

    T_Elif  shift, and go to state 95
    T_Else  shift, and go to state 96

    T_Elif    [reduce using rule 52 (elif_stmts)]
    T_Else    [reduce using rule 52 (elif_stmts)]
    $default  reduce using rule 52 (elif_stmts)

    elif_stmts  go to state 121
    else_stmts  go to state 98


State 118

   67 func_def: T_Def T_ID $@4 T_OP args_list T_CP T_Cln start_suite .

    $default  reduce using rule 67 (func_def)


State 119

   59 suite: T_NL ND finalStatements . suite

    T_NL  shift, and go to state 108

    suite  go to state 122


State 120

   61 end_suite: DD finalStatements .

    $default  reduce using rule 61 (end_suite)


State 121

   53 elif_stmts: T_Elif bool_exp T_Cln start_suite elif_stmts .

    $default  reduce using rule 53 (elif_stmts)


State 122

   59 suite: T_NL ND finalStatements suite .

    $default  reduce using rule 59 (suite)
